name: Andrasat Nuxt - Release
run-name: ${{ github.actor }} is building... ðŸš€
on:
  push:
    branches:
      - main
jobs:
  Semantic-Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.36
      - name: Install Dependencies
        run: bun install
      - name: Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: bun run semantic-release
  Build-And-Deploy-To-Server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup SSH
        run: ./scripts/setup_ssh.sh
        env:
          KEY: ${{ secrets.KEY }}
          HOST: ${{ secrets.HOST }}
      - name: Check SSH
        run: test -e $HOME/.ssh/id_rsa && echo "File OK" || exit 1
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.36
      - name: Setup Doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Install Dependencies
        run: bun install
      - name: Build
        run: bun run build
        env:
          FA_KIT: ${{ secrets.FA_KIT }}
      - name: Zip Files
        run: |
          cd .output; zip -r public.zip public; cd ..
          cd .output; zip -r server.zip server; cd ..
      - name: Copy File
        run: |
          scp public.zip $USER@$HOST:/root/
          scp server.zip $USER@$HOST:/root/
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USERNAME }}
      - name: Unzip Files
        run: |
          doctl compute ssh $DROPLET_NAME --ssh-command "unzip -o public.zip -d /var/www/public"
          doctl compute ssh $DROPLET_NAME --ssh-command "unzip -o server.zip -d /var/www/server"
          doctl compute ssh $DROPLET_NAME --ssh-command "rm public.zip server.zip"
        env:
          DROPLET_NAME: ${{ secrets.DROPLET_NAME }}
